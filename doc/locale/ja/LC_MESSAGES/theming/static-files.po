# 
msgid ""
msgstr ""
"Project-Id-Version: sphinx test 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-19 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../theming/static-files.rst:3
msgid "Adding static files"
msgstr ""

#: ../../theming/static-files.rst:5
msgid ""
"You may need to add some custom *static files* to your CKAN site and use "
"them from your templates, for example image files, PDF files, or any other "
"static files that should be returned as-is by the webserver (as opposed to "
"Jinja template files, which CKAN renders before returning them to the user)."
msgstr ""

#: ../../theming/static-files.rst:10
msgid ""
"By adding a directory to CKAN's :ref:`extra_public_paths` config setting, a "
"plugin can make a directory of static files available to be used or linked "
"to by templates. Let's add a static image file, and change the home page "
"template to use our file as the promoted image on the front page."
msgstr ""

#: ../../theming/static-files.rst:17
msgid ":doc:`fanstatic`"
msgstr ""

#: ../../theming/static-files.rst:19
msgid ""
"If you're adding CSS files consider using Fanstatic instead of "
":ref:`extra_public_paths`, to take advantage of extra features. See "
":doc:`fanstatic`. If you're adding |javascript| modules you have to use "
"Fanstatic, see :doc:`javascript`."
msgstr ""

#: ../../theming/static-files.rst:24
msgid ""
"First, create a ``public`` directory in your extension with a ``promoted-"
"image.jpg`` file in it::"
msgstr ""

#: ../../theming/static-files.rst:31
msgid ""
"``promoted-image.jpg`` should be a 420x220px JPEG image file. You could use "
"this image file for example:"
msgstr ""

#: ../../theming/static-files.rst:39
msgid ""
"Then in ``plugin.py``, register your ``public`` directory with CKAN by "
"calling the :py:func:`~ckan.plugins.toolkit.add_public_directory` function. "
"Add this line to the "
":py:func:`~ckan.ckanext.example_theme.v11_extra_public_directory.plugin.update_config`"
" function:"
msgstr ""

#: ../../theming/static-files.rst:47
msgid ""
"If you now browse to `127.0.0.1:5000/promoted-image.jpg "
"<http://127.0.0.1:5000/promoted-image.jpg>`_, you should see your image "
"file."
msgstr ""

#: ../../theming/static-files.rst:50
msgid ""
"To replace the image on the front page with your custom image, we need to "
"override the ``promoted.html`` template snippet. Create the following "
"directory and file::"
msgstr ""

#: ../../theming/static-files.rst:60
msgid "Edit your new ``promoted.html`` snippet, and insert these contents:"
msgstr ""

#: ../../theming/static-files.rst:65
msgid ""
"After calling ``{% ckan_extends %}`` to declare that it extends (rather than"
" completely replaces) the default ``promoted.html`` snippet, this custom "
"snippet overrides two of ``promoted.html``'s template blocks. The first "
"block replaces the caption text of the promoted image. The second block "
"replaces the ``<img>`` tag itself, pointing it at our custom static image "
"file:"
msgstr ""

#: ../../theming/static-files.rst:75
msgid ""
"If you now restart the development web server and reload the `CKAN front "
"page`_ in your browser, you should see the promoted image replaced with our "
"custom one:"
msgstr ""
