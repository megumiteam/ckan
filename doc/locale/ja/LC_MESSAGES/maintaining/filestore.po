# 
msgid ""
msgstr ""
"Project-Id-Version: sphinx test 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-19 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../maintaining/filestore.rst:3
msgid "FileStore and file uploads"
msgstr ""

#: ../../maintaining/filestore.rst:5
msgid ""
"When enabled, CKAN's FileStore allows users to upload data files to CKAN "
"resources, and to upload logo images for groups and organizations. Users "
"will see an upload button when creating or updating a resource, group or "
"organization."
msgstr ""

#: ../../maintaining/filestore.rst:10
msgid ""
"Uploading logo images for groups and organizations was added in CKAN 2.2."
msgstr ""

#: ../../maintaining/filestore.rst:13
msgid ""
"Previous versions of CKAN used to allow uploads to remote cloud hosting but "
"we have simplified this to only allow local file uploads (see "
":ref:`filestore_21_to_22_migration` for details on how to migrate). This is "
"to give CKAN more control over the files and make access control possible."
msgstr ""

#: ../../maintaining/filestore.rst:21
msgid ":doc:`datastore`"
msgstr ""

#: ../../maintaining/filestore.rst:23
msgid ""
"Resource files linked-to from CKAN or uploaded to CKAN's FileStore can also "
"be pushed into CKAN's DataStore, which then enables data previews and a data"
" API for the resources."
msgstr ""

#: ../../maintaining/filestore.rst:30
msgid "Setup file uploads"
msgstr ""

#: ../../maintaining/filestore.rst:32
msgid "To setup CKAN's FileStore with local file storage:"
msgstr ""

#: ../../maintaining/filestore.rst:34
msgid "Create the directory where CKAN will store uploaded files:"
msgstr ""

#: ../../maintaining/filestore.rst:40
msgid ""
"Add the following line to your CKAN config file, after the ``[app:main]`` "
"line:"
msgstr ""

#: ../../maintaining/filestore.rst:47
msgid ""
"Set the permissions of your :ref:`ckan.storage_path` directory. For example "
"if you're running CKAN with Apache, then Apache's user (``www-data`` on "
"Ubuntu) must have read, write and execute permissions for the "
":ref:`ckan.storage_path`:"
msgstr ""

#: ../../maintaining/filestore.rst:57
msgid "Restart your web server, for example to restart Apache:"
msgstr ""

#: ../../maintaining/filestore.rst:66
msgid "FileStore API"
msgstr ""

#: ../../maintaining/filestore.rst:68
msgid ""
"The FileStore API was redesigned for CKAN 2.2. The previous API has been "
"deprecated."
msgstr ""

#: ../../maintaining/filestore.rst:72
msgid ""
"Files can be uploaded to the FileStore using the "
":py:func:`~ckan.logic.action.create.resource_create` and "
":py:func:`~ckan.logic.action.update.resource_update` action API functions. "
"You can post multipart/form-data to the API and the key, value pairs will "
"treated as as if they are a JSON object. The extra key ``upload`` is used to"
" actually post the binary data."
msgstr ""

#: ../../maintaining/filestore.rst:79
msgid ""
"For example, to create a new CKAN resource and upload a file to it using "
"`curl <http://curl.haxx.se/>`_:"
msgstr ""

#: ../../maintaining/filestore.rst:86
msgid ""
"(Curl automatically sends a ``multipart-form-data`` heading with you use the"
" ``--form`` option.)"
msgstr ""

#: ../../maintaining/filestore.rst:89
msgid ""
"To create a new resource and upload a file to it using the Python library "
"`requests <http://python-requests.org/>`_:"
msgstr ""

#: ../../maintaining/filestore.rst:100
msgid ""
"(Requests automatically sends a ``multipart-form-data`` heading when you use"
" the ``files=`` parameter.)"
msgstr ""

#: ../../maintaining/filestore.rst:103
msgid ""
"To overwrite an uploaded file with a new version of the file, post to the "
":py:func:`~ckan.logic.action.update.resource_update` action and use the "
"``upload`` field::"
msgstr ""

#: ../../maintaining/filestore.rst:109
msgid ""
"To replace an uploaded file with a link to a file at a remote URL, use the "
"``clear_upload`` field::"
msgstr ""

#: ../../maintaining/filestore.rst:119
msgid "Migration from 2.1 to 2.2"
msgstr ""

#: ../../maintaining/filestore.rst:121
msgid ""
"If you are using pairtree local file storage then you can keep your current "
"settings without issue.  The pairtree and new storage can live side by side "
"but you are still encouraged to migrate.  If you change your config options "
"to the ones specified in this docs you will need to run the migration below."
msgstr ""

#: ../../maintaining/filestore.rst:126
msgid ""
"If you are running remote storage then all previous links will still be "
"accessible but if you want to move the remote storage documents to the local"
" storage you will run the migration also."
msgstr ""

#: ../../maintaining/filestore.rst:130
msgid ""
"In order to migrate make sure your CKAN instance is running as the script "
"will request the data from the instance using APIs.  You need to run the "
"following on the command line to do the migration::"
msgstr ""

#: ../../maintaining/filestore.rst:136
msgid ""
"This may take a long time especially if you have a lot of files remotely. If"
" the remote hosting goes down or the job is interrupted it is save to run it"
" again and it will try all the unsuccessful ones again."
msgstr ""

#: ../../maintaining/filestore.rst:143
msgid "Custom Internet media types (MIME types)"
msgstr ""

#: ../../maintaining/filestore.rst:147
msgid ""
"CKAN uses the default Python library `mimetypes`_ to detect the media type "
"of an uploaded file. If some particular format is not included in the ones "
"guessed by the ``mimetypes`` library, a default ``application/octet-stream``"
" value will be returned."
msgstr ""

#: ../../maintaining/filestore.rst:152
msgid ""
"Users can still register a more appropiate media type by using the "
"``mimetypes`` library. A good way to do so is to use the ``IConfigurer`` "
"interface so the custom types get registered on startup::"
msgstr ""
