# 
msgid ""
msgstr ""
"Project-Id-Version: sphinx test 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-19 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../contributing/frontend/templating.rst:3
msgid "Templating"
msgstr ""

#: ../../contributing/frontend/templating.rst:5
msgid ""
"Within CKAN 2.0 we moved out templating to use Jinja2 from Genshi. This was "
"done to provide a more flexible, extensible and most importantly easy to "
"understand templating language."
msgstr ""

#: ../../contributing/frontend/templating.rst:9
msgid "Some useful links to get you started."
msgstr ""

#: ../../contributing/frontend/templating.rst:11
msgid "`Jinja2 Homepage <http://Jinja2.pocoo.org>`_"
msgstr ""

#: ../../contributing/frontend/templating.rst:12
msgid "`Jinja2 Developer Documentation <http://Jinja2.pocoo.org/docs/>`_"
msgstr ""

#: ../../contributing/frontend/templating.rst:13
msgid ""
"`Jinja2 Template Documentation <http://Jinja2.pocoo.org/docs/templates/>`_"
msgstr ""

#: ../../contributing/frontend/templating.rst:17
msgid "Legacy Templates"
msgstr ""

#: ../../contributing/frontend/templating.rst:19
msgid ""
"Existing Genshi templates have been moved to the *templates\\_legacy* "
"directory and will continue to be served if no file with the same name is "
"located in *templates*. This should ensure backward compatibility until "
"instances are able to upgrade to the new system."
msgstr ""

#: ../../contributing/frontend/templating.rst:24
msgid ""
"The lookup path for templates is as follows. Give the template path "
"\"user/index.html\":"
msgstr ""

#: ../../contributing/frontend/templating.rst:27
msgid "Look in the template directory of each loaded extension."
msgstr ""

#: ../../contributing/frontend/templating.rst:28
msgid "Look in the template\\_legacy directory for each extension."
msgstr ""

#: ../../contributing/frontend/templating.rst:29
msgid "Look in the main ckan template directory."
msgstr ""

#: ../../contributing/frontend/templating.rst:30
msgid "Look in the template\\_legacy directory."
msgstr ""

#: ../../contributing/frontend/templating.rst:32
msgid "CKAN will automatically determine the template engine to use."
msgstr ""

#: ../../contributing/frontend/templating.rst:35
msgid "File Structure"
msgstr ""

#: ../../contributing/frontend/templating.rst:37
msgid ""
"The file structure for the CKAN templates is pretty much the same as before "
"with a directory per controller and individual files per action."
msgstr ""

#: ../../contributing/frontend/templating.rst:40
msgid ""
"With Jinja2 we also have the ability to use snippets which are small "
"fragments of HTML code that can be pulled in to any template. These are kept"
" in a snippets directory within the same folder as the actions that are "
"using them. More generic snippets are added to templates/snippets."
msgstr ""

#: ../../contributing/frontend/templating.rst:62
msgid "Using the templating system"
msgstr ""

#: ../../contributing/frontend/templating.rst:64
msgid ""
"Jinja2 makes heavy use of template inheritance to build pages. A template "
"for an action will tend to inherit from *page.html*:"
msgstr ""

#: ../../contributing/frontend/templating.rst:71
msgid ""
"Each parent defines a number of blocks that can be overridden to add content"
" to the page. *page.html* defines majority of the markup for a standard "
"page. Generally only ``{% block primary_content %}`` needs to be extended:"
msgstr ""

#: ../../contributing/frontend/templating.rst:85
msgid ""
"Most template pages will define enough blocks so that the extending page can"
" customise as little or as much as required."
msgstr ""

#: ../../contributing/frontend/templating.rst:89
msgid "Internationalisation"
msgstr ""

#: ../../contributing/frontend/templating.rst:91
msgid ""
"Jinja2 provides a couple of helpers for `internationalisation "
"<http://Jinja2.pocoo.org/docs/templates/#i18n>`_. The most common is to use "
"the ``_()`` function:"
msgstr ""

#: ../../contributing/frontend/templating.rst:102
msgid "Variables can be provided using the \"format\" function:"
msgstr ""

#: ../../contributing/frontend/templating.rst:110
msgid "For longer multiline blocks the ``{% trans %}`` block can be used."
msgstr ""

#: ../../contributing/frontend/templating.rst:123
msgid "Conventions"
msgstr ""

#: ../../contributing/frontend/templating.rst:125
msgid ""
"There are a few common conventions that have evolved from using the "
"language."
msgstr ""

#: ../../contributing/frontend/templating.rst:129
msgid "Includes"
msgstr ""

#: ../../contributing/frontend/templating.rst:132
msgid ""
"Includes should be avoided as they are not portable use {% snippet %} tags "
"whenever possible."
msgstr ""

#: ../../contributing/frontend/templating.rst:135
msgid ""
"Snippets of text that are included using ``{% include %}`` should be kept in"
" a directory called _snippets_. This should be kept in the same directory as"
" the code that uses it."
msgstr ""

#: ../../contributing/frontend/templating.rst:139
msgid ""
"Generally we use the ``{% snippet %}`` helper in all theme files unless the "
"parents context must absolutely be available to the snippet. In which case "
"the usage should be clearly documented."
msgstr ""

#: ../../contributing/frontend/templating.rst:144
msgid "Snippets"
msgstr ""

#: ../../contributing/frontend/templating.rst:147
msgid "{% snippet %} tags should be used in favour of h.snippet()"
msgstr ""

#: ../../contributing/frontend/templating.rst:149
msgid ""
"Snippets are essentially middle ground between includes and macros in that "
"they are includes that allow a specific context to be provided (includes "
"just receive the parent context)."
msgstr ""

#: ../../contributing/frontend/templating.rst:153
msgid ""
"These should be preferred to includes at all times as they make debugging "
"much easier."
msgstr ""

#: ../../contributing/frontend/templating.rst:157
msgid "Macros"
msgstr ""

#: ../../contributing/frontend/templating.rst:159
msgid ""
"Macros should be used very sparingly to create custom generators for very "
"generic snippets of code. For example macros/form.html has macros for "
"creating common form fields."
msgstr ""

#: ../../contributing/frontend/templating.rst:163
msgid ""
"They should generally be avoided as they are hard to extend and customise."
msgstr ""

#: ../../contributing/frontend/templating.rst:167
msgid "Templating within extensions"
msgstr ""

#: ../../contributing/frontend/templating.rst:169
msgid ""
"When you need to add or customize a template from within an extension you "
"need to tell CKAN that there is a template directory that it can call from. "
"Within your ``update_config`` method for the extension you'll need to add a "
"``extra_template_paths`` to the ``config``."
msgstr ""

#: ../../contributing/frontend/templating.rst:175
msgid "Custom Control Structures"
msgstr ""

#: ../../contributing/frontend/templating.rst:177
msgid ""
"We've provided a few additional control structures to make working with the "
"templates easier. Other helpers can still be used using the ``h`` object as "
"before."
msgstr ""

#: ../../contributing/frontend/templating.rst:182
msgid "ckan\\_extends"
msgstr ""

#: ../../contributing/frontend/templating.rst:188
msgid ""
"This works in a very similar way to ``{% extend %}`` however it will load "
"the next template up in the load path with the same name."
msgstr ""

#: ../../contributing/frontend/templating.rst:191
msgid ""
"For example if you wish to remove the breadcrumb from the user profile page "
"in your own site. You would locate the template you wish to override."
msgstr ""

#: ../../contributing/frontend/templating.rst:199
msgid "And create a new one in your theme extension."
msgstr ""

#: ../../contributing/frontend/templating.rst:205
msgid ""
"In this new file you would pull in the core template using ``{% ckan_extends"
" %}``:"
msgstr ""

#: ../../contributing/frontend/templating.rst:212
msgid ""
"This will now render the current user/read page but we can override any "
"portion that we wish to change. In this case the ``breadcrumb`` block."
msgstr ""

#: ../../contributing/frontend/templating.rst:222
msgid ""
"This function works recursively and so is ideal for extensions that wish to "
"add a small snippet of functionality to the page."
msgstr ""

#: ../../contributing/frontend/templating.rst:226
msgid "{% ckan_extend %} only extends templates of the same name."
msgstr ""

#: ../../contributing/frontend/templating.rst:229
msgid "snippet"
msgstr ""

#: ../../contributing/frontend/templating.rst:235
msgid ""
"Snippets work very much like Jinja2's ``{% include %}`` except that that do "
"not inherit the parent templates context. This means that all variables must"
" be explicitly passed in to the snippet. This makes debugging much easier."
msgstr ""

#: ../../contributing/frontend/templating.rst:245
msgid "url\\_for"
msgstr ""

#: ../../contributing/frontend/templating.rst:251
msgid "Works exactly the same as ``h.url_for()``:"
msgstr ""

#: ../../contributing/frontend/templating.rst:258
msgid "link\\_for"
msgstr ""

#: ../../contributing/frontend/templating.rst:264
msgid "Works exactly the same as ``h.link_for()``:"
msgstr ""

#: ../../contributing/frontend/templating.rst:271
msgid "url\\_for\\_static"
msgstr ""

#: ../../contributing/frontend/templating.rst:277
msgid "Works exactly the same as ``h.url_for_static()``:"
msgstr ""

#: ../../contributing/frontend/templating.rst:284
msgid "Form Macros"
msgstr ""

#: ../../contributing/frontend/templating.rst:286
msgid ""
"For working with forms we have provided some simple macros for generating "
"common fields. These will be suitable for most forms but anything more "
"complicated will require the markup to be written by hand."
msgstr ""

#: ../../contributing/frontend/templating.rst:290
msgid ""
"The macros can be imported into the page using the ``{% import %}`` command."
msgstr ""

#: ../../contributing/frontend/templating.rst:297
msgid "The following fields are provided:"
msgstr ""

#: ../../contributing/frontend/templating.rst:300
msgid "form.input()"
msgstr ""

#: ../../contributing/frontend/templating.rst:302
msgid ""
"Creates all the markup required for an input element. Handles matching "
"labels to inputs, error messages and other useful elements."
msgstr ""

#: ../../contributing/frontend/templating.rst:316
#: ../../contributing/frontend/templating.rst:366
#: ../../contributing/frontend/templating.rst:389
#: ../../contributing/frontend/templating.rst:412
#: ../../contributing/frontend/templating.rst:438
#: ../../contributing/frontend/templating.rst:465
msgid "Examples:"
msgstr ""

#: ../../contributing/frontend/templating.rst:324
msgid "form.checkbox()"
msgstr ""

#: ../../contributing/frontend/templating.rst:326
msgid "Builds a single checkbox input."
msgstr ""

#: ../../contributing/frontend/templating.rst:338
msgid "Example:"
msgstr ""

#: ../../contributing/frontend/templating.rst:346
msgid "form.select()"
msgstr ""

#: ../../contributing/frontend/templating.rst:348
msgid ""
"Creates all the markup required for an select element. Handles matching "
"labels to inputs and error messages."
msgstr ""

#: ../../contributing/frontend/templating.rst:351
msgid ""
"A field should be a dict with a \"value\" key and an optional \"text\" key "
"which will be displayed to the user. ``{\"value\": \"my-option\", \"text\": "
"\"My Option\"}``. We use a dict to easily allow extension in future should "
"extra options be required."
msgstr ""

#: ../../contributing/frontend/templating.rst:374
msgid "form.textarea()"
msgstr ""

#: ../../contributing/frontend/templating.rst:376
msgid ""
"Creates all the markup required for a plain textarea element. Handles "
"matching labels to inputs, selected item and error messages."
msgstr ""

#: ../../contributing/frontend/templating.rst:397
msgid "form.markdown()"
msgstr ""

#: ../../contributing/frontend/templating.rst:399
msgid ""
"Creates all the markup required for a Markdown textarea element. Handles "
"matching labels to inputs, selected item and error messages."
msgstr ""

#: ../../contributing/frontend/templating.rst:420
msgid "form.prepend()"
msgstr ""

#: ../../contributing/frontend/templating.rst:422
msgid ""
"Creates all the markup required for an input element with a prefixed "
"segment. These are useful for showing url slugs and other fields where the "
"input information forms only part of the saved data."
msgstr ""

#: ../../contributing/frontend/templating.rst:446
msgid "form.custom()"
msgstr ""

#: ../../contributing/frontend/templating.rst:448
msgid ""
"Creates all the markup required for an custom key/value input. These are "
"usually used to let the user provide custom meta data. Each \"field\" has "
"three inputs one for the key, one for the value and a checkbox to remove it."
" So the arguments for this macro are nearly all tuples containing values for"
" the (key, value, delete) fields respectively."
msgstr ""

#: ../../contributing/frontend/templating.rst:479
msgid "form.autoform()"
msgstr ""

#: ../../contributing/frontend/templating.rst:481
msgid "Builds a form from the supplied form_info list/tuple."
msgstr ""

#: ../../contributing/frontend/templating.rst:490
msgid "Example"
msgstr ""
