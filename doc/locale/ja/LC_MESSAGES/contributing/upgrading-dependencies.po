# 
msgid ""
msgstr ""
"Project-Id-Version: sphinx test 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-19 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../contributing/upgrading-dependencies.rst:3
msgid "Upgrading CKAN's dependencies"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:5
msgid ""
"The Python modules that CKAN depends on are pinned to specific versions, so "
"we can guarantee that whenever anyone installs CKAN, they'll always get the "
"same versions of the Python modules in their virtual environment."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:9
msgid "Our dependencies are defined in three files:"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:15
msgid "requirements.in"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:12
msgid ""
"This file is only used to create a new version of the ``requirements.txt`` "
"file when upgrading the dependencies. Contains our direct dependencies only "
"(not dependencies of dependencies) with loosely defined versions. For "
"example, ``apachemiddleware>=0.1.1,<0.2``."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:21
msgid "requirements.txt"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:18
msgid ""
"This is the file that people actually use to install CKAN's dependencies "
"into their virtualenvs. It contains every dependency, including dependencies"
" of dependencies, each pinned to a specific version. For example, "
"``simplejson==3.3.1``."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:26
msgid "dev-requirements.txt"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:24
msgid ""
"Contains those dependencies only needed by developers, not needed for "
"production sites. These are pinned to a specific version. For example, "
"``factory-boy==2.1.1``."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:28
msgid ""
"We haven't created a ``dev-requirements.in`` file because we have too few "
"dev dependencies, we don't update them often, and none of them have a known "
"incompatible version."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:34
msgid "Steps to upgrade"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:36
msgid ""
"These steps will upgrade all of CKAN's dependencies to the latest versions "
"that work with CKAN:"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:39
msgid "Create a new virtualenv: ``virtualenv --no-site-packages upgrading``"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:41
msgid ""
"Install the requirements with unpinned versions: ``pip install -r "
"requirements.in``"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:44
msgid ""
"Save the new dependencies versions: ``pip freeze > requirements.txt``. We "
"have to do this before installing the other dependencies so we get only what"
" was in ``requirements.in``"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:48
msgid "Install CKAN: ``python setup.py develop``"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:50
msgid ""
"Install the development dependencies: ``pip install -r dev-"
"requirements.txt``"
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:53
msgid "Run the tests to make sure everything still works (see :doc:`test`)."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:55
msgid ""
"If not, try to fix the problem. If it's too complicated, pinpoint which "
"dependency's version broke our tests, find an older version that still "
"works, and add it to ``requirements.in`` (i.e., if ``python-dateutil`` 2.0.0"
" broke CKAN, you'd add ``python-dateutil>=1.5.0,<2.0.0``). Go back to step "
"1."
msgstr ""

#: ../../contributing/upgrading-dependencies.rst:61
msgid ""
"Navigate a bit on CKAN to make sure the tests didn't miss anything. Review "
"the dependencies changes and their changelogs. If everything seems fine, go "
"ahead and make a pull request (see :doc`/contributing/pull-requests`)."
msgstr ""
