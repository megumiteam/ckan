# 
msgid ""
msgstr ""
"Project-Id-Version: sphinx test 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-19 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../contributing/javascript.rst:3
msgid "JavaScript coding standards"
msgstr ""

#: ../../contributing/javascript.rst:7
msgid ":doc:`string-i18n`"
msgstr ""

#: ../../contributing/javascript.rst:8
msgid "How to mark strings for translation."
msgstr ""

#: ../../contributing/javascript.rst:12
msgid "Formatting"
msgstr ""

#: ../../contributing/javascript.rst:18
msgid ""
"All JavaScript documents must use **two spaces** for indentation. This is "
"contrary to the `OKFN Coding Standards`_ but matches what's in use in the "
"current code base."
msgstr ""

#: ../../contributing/javascript.rst:22
msgid ""
"Coding style must follow the `idiomatic.js`_ style but with the following "
"exceptions."
msgstr ""

#: ../../contributing/javascript.rst:25
msgid ""
"Idiomatic is heavily based upon `Douglas Crockford's`_ style guide which is "
"recommended by the `OKFN Coding Standards`_."
msgstr ""

#: ../../contributing/javascript.rst:29
msgid "White space"
msgstr ""

#: ../../contributing/javascript.rst:31
msgid ""
"Two spaces must be used for indentation at all times. Unlike in idiomatic "
"whitespace must not be used _inside_ parentheses between the parentheses and"
" their Contents. ::"
msgstr ""

#: ../../contributing/javascript.rst:53
msgid "See section 2.D.1.1 of idiomatic for more examples of this syntax."
msgstr ""

#: ../../contributing/javascript.rst:56
msgid "Quotes"
msgstr ""

#: ../../contributing/javascript.rst:58
msgid ""
"Single quotes should be used everywhere unless writing JSON or the string "
"contains them. This makes it easier to create strings containing HTML. ::"
msgstr ""

#: ../../contributing/javascript.rst:63
msgid ""
"Object properties need not be quoted unless required by the interpreter. ::"
msgstr ""

#: ../../contributing/javascript.rst:71
msgid "Variable declarations"
msgstr ""

#: ../../contributing/javascript.rst:73
msgid ""
"One ``var`` statement must be used per variable assignment. These must be "
"declared at the top of the function in which they are being used. ::"
msgstr ""

#: ../../contributing/javascript.rst:92
msgid ""
"Declare variables at the top of the function in which they are first used. "
"This avoids issues with variable hoisting. If a variable is not assigned a "
"value until later in the function then it it okay to define more than one "
"per statement. ::"
msgstr ""

#: ../../contributing/javascript.rst:126
msgid "Naming"
msgstr ""

#: ../../contributing/javascript.rst:128
msgid "All properties, functions and methods must use lowercase camelCase: ::"
msgstr ""

#: ../../contributing/javascript.rst:135
msgid "Constructor functions must use uppercase CamelCase: ::"
msgstr ""

#: ../../contributing/javascript.rst:140
msgid "Constants must be uppercase with spaces delimited by underscores: ::"
msgstr ""

#: ../../contributing/javascript.rst:148
msgid "Event handlers and callback functions should be prefixed with \"on\": ::"
msgstr ""

#: ../../contributing/javascript.rst:154
msgid ""
"Boolean variables or methods returning boolean functions should prefix the "
"variable name with \"is\": ::"
msgstr ""

#: ../../contributing/javascript.rst:162
msgid "Alternatives are \"has\", \"can\" and \"should\" if they make more sense"
msgstr ""

#: ../../contributing/javascript.rst:164
msgid "Private methods should be prefixed with an underscore: ::"
msgstr ""

#: ../../contributing/javascript.rst:172
msgid ""
"Functions should be declared as named functions rather than assigning an "
"anonymous function to a variable. ::"
msgstr ""

#: ../../contributing/javascript.rst:183
msgid ""
"Named functions are generally easier to debug as they appear named in the "
"debugger."
msgstr ""

#: ../../contributing/javascript.rst:188
msgid "Comments"
msgstr ""

#: ../../contributing/javascript.rst:190
msgid ""
"Comments should be used to explain anything that may be unclear when you "
"return to it in six months time. Single line comments should be used for all"
" inline comments that do not form part of the documentation. ::"
msgstr ""

#: ../../contributing/javascript.rst:209
msgid "JSHint"
msgstr ""

#: ../../contributing/javascript.rst:211
msgid ""
"All JavaScript should pass `JSHint`_ before being committed. This can be "
"installed using ``npm`` (which is bundled with `node`_) by running: ::"
msgstr ""

#: ../../contributing/javascript.rst:216
msgid ""
"Each project should include a jshint.json file with appropriate "
"configuration options for the tool. Most text editors can also be configured"
" to read from this file."
msgstr ""

#: ../../contributing/javascript.rst:225
msgid "Documentation"
msgstr ""

#: ../../contributing/javascript.rst:227
msgid ""
"For documentation we use a simple markup format to document all methods. The"
" documentation should provide enough information to show the reader what the"
" method does, arguments it accepts and a general example of usage. Also for "
"API's and third party libraries, providing links to external documentation "
"is encouraged."
msgstr ""

#: ../../contributing/javascript.rst:233
msgid "The formatting is as follows::"
msgstr ""

#: ../../contributing/javascript.rst:251
msgid "For example::"
msgstr ""

#: ../../contributing/javascript.rst:277
msgid "Testing"
msgstr ""

#: ../../contributing/javascript.rst:279
msgid "For unit testing we use the following libraries."
msgstr ""

#: ../../contributing/javascript.rst:281
msgid "`Mocha`_: As a BDD unit testing framework."
msgstr ""

#: ../../contributing/javascript.rst:282
msgid "`Sinon`_: Provides spies, stubs and mocks for methods and functions."
msgstr ""

#: ../../contributing/javascript.rst:283
msgid "`Chai`_: Provides common assertions."
msgstr ""

#: ../../contributing/javascript.rst:289
msgid ""
"Tests are run from the test/index.html directory. We use the BDD interface "
"(``describe()``, ``it()`` etc.) provided by mocha and the assert interface "
"provided by chai."
msgstr ""

#: ../../contributing/javascript.rst:293
msgid ""
"Generally we try and have the core functionality of all libraries and "
"modules unit tested."
msgstr ""

#: ../../contributing/javascript.rst:298
msgid "Best practices"
msgstr ""

#: ../../contributing/javascript.rst:301
msgid "Forms"
msgstr ""

#: ../../contributing/javascript.rst:303
msgid ""
"All forms should work without JavaScript enabled. This means that they must "
"submit ``application/x-www-form-urlencoded`` data to the server and receive "
"an appropriate response. The server should check for the ``X-Requested-With:"
" XMLHTTPRequest`` header to determine if the request is an ajax one. If so "
"it can return an appropriate format, otherwise it should issue a 303 "
"redirect."
msgstr ""

#: ../../contributing/javascript.rst:309
msgid ""
"The one exception to this rule is if a form or button is injected with "
"JavaScript after the page has loaded. It's then not part of the HTML "
"document and can submit any data format it pleases."
msgstr ""

#: ../../contributing/javascript.rst:314
msgid "Ajax"
msgstr ""

#: ../../contributing/javascript.rst:317
msgid ""
"Calls to the CKAN API from JavaScript should be done through the `CKAN "
"client`_."
msgstr ""

#: ../../contributing/javascript.rst:322
msgid ""
"Ajax requests can be used to improve the experience of submitting forms and "
"other actions that require server interactions. Nearly all requests will go "
"through the following states."
msgstr ""

#: ../../contributing/javascript.rst:326
msgid "User clicks button."
msgstr ""

#: ../../contributing/javascript.rst:327
msgid ""
"JavaScript intercepts the click and disables the button (add ``disabled`` "
"attr)."
msgstr ""

#: ../../contributing/javascript.rst:329
msgid "A loading indicator is displayed (add class ``.loading`` to button)."
msgstr ""

#: ../../contributing/javascript.rst:330
msgid "The request is made to the server."
msgstr ""

#: ../../contributing/javascript.rst:331
msgid "On success the interface is updated."
msgstr ""

#: ../../contributing/javascript.rst:332
msgid ""
"On error a message is displayed to the user if there is no other way to "
"resolve the issue."
msgstr ""

#: ../../contributing/javascript.rst:334
msgid "The loading indicator is removed."
msgstr ""

#: ../../contributing/javascript.rst:335
msgid "The button is re-enabled."
msgstr ""

#: ../../contributing/javascript.rst:337
msgid ""
"Here's a possible example for submitting a search form using jQuery. ::"
msgstr ""

#: ../../contributing/javascript.rst:363
msgid ""
"This covers possible issues that might arise from submitting the form as "
"well as providing the user with adequate feedback that the page is doing "
"something. Disabling the button prevents the form being submitted twice and "
"the error feedback should hopefully offer a solution for the error that "
"occurred."
msgstr ""

#: ../../contributing/javascript.rst:369
msgid "Event handlers"
msgstr ""

#: ../../contributing/javascript.rst:371
msgid ""
"When using event handlers to listen for browser events it's a common "
"requirement to want to cancel the default browser action. This should be "
"done by calling the ``event.preventDefault()`` method: ::"
msgstr ""

#: ../../contributing/javascript.rst:379
msgid ""
"It is also possible to return ``false`` from the callback function. Avoid "
"doing this as it also calls the ``event.stopPropagation()`` method which "
"prevents the event from bubbling up the DOM tree. This prevents other "
"handlers listening for the same event. For example an analytics click "
"handler attached to the ``<body>`` element."
msgstr ""

#: ../../contributing/javascript.rst:385
msgid ""
"Also jQuery (1.7+) now provides the `.on()`_ and `.off()`_  methods as "
"alternatives to ``.bind()``, ``.unbind()``, ``.delegate()`` and "
"``.undelegate()`` and they should be preferred for all tasks."
msgstr ""

#: ../../contributing/javascript.rst:393
msgid "Templating"
msgstr ""

#: ../../contributing/javascript.rst:395
msgid ""
"Small templates that will not require customisation by the instance can be "
"placed inline. If you need to create multi-line templates use an array "
"rather than escaping newlines within a string::"
msgstr ""

#: ../../contributing/javascript.rst:405
msgid ""
"Always localise text strings within your templates. If you are including "
"them inline this can always be done with jQuery::"
msgstr ""

#: ../../contributing/javascript.rst:410
msgid ""
"Larger templates can be loaded in using the CKAN snippet API. Modules get "
"access to this functionality via the ``sandbox.client`` object::"
msgstr ""

#: ../../contributing/javascript.rst:420
msgid ""
"The primary benefits of this is that the localisation can be done by the "
"server and it keeps the JavaScript modules free from large strings."
msgstr ""
